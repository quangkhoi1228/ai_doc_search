CÁC THAO TÁC TRÊN KIỂU CON TRỎ 
- Tạo biến cấp phát động để con trỏ quản lý. 
	+ Trong C, dùng hàm các hàm 
		void* malloc(size) 
		void* calloc(n,size) 
	+ Trong C++, dùng phép toán new 
		new kiểu // cấp phát vùng nhớ cho 1 biến 
		new kiểu[n] //cấp phát vùng nhớ cho n biến
	Kết quả cấp phát là địa chỉ ô nhớ đầu tiên của vùng nhớ được cấp phát hoặc giá trị NULL nếu không cấp phát được
- Giải phóng biến cấp phát động do con trỏ quản lý. 
	+ Trong C, dùng hàm void free(p) 
	+ Trong C++, dùng phép toán delete 
		delete p // nếu p = new kiểu
		delete [] p // nếu p = new kiểu[n]
- Tăng hoặc giảm địa chỉ vùng nhớ do con trỏ quản lý n lần kích thước kiểu: dùng phép toán tương ứng là + hoặc -.
 Ví dụ: 
	int *p; 
	p = (int *)1; 
	p = p + 4; // giá trị của p là 1+4*4=17. 1 
	int = 4 bytes p--; // giá trị của p là 17-1*4=13. 
Lưu ý: *(p + i) tương đương với p[i]
- Phân giải địa chỉ con trỏ (dereference) bằng phép toán * 
Phân giải địa chỉ con trỏ là truy cập đến biến cấp phát động. 
Ví dụ: 
	int *p; 
	p = new int; // tạo một biến cấp phát động cho p 
	*p = 100; // gán 100 cho biến cấp phát động 	
	*p *= 2; // nhân 2 với giá trị biến cấp phát động 
	cout << *p; // in ra giá trị biến cấp phát động

